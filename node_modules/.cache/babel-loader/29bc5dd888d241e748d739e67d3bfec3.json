{"ast":null,"code":"import _slicedToArray from \"D:\\\\Kalpas_Doodle\\\\react-interactive-paycard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Kalpas_Doodle\\\\react-interactive-paycard-master\\\\src\\\\screens\\\\MainScreen\\\\components\\\\form\\\\index.js\";\nimport Button from './Button';\nimport React, { useEffect, useState, useRef } from 'react';\nconst currentYear = new Date().getFullYear();\nconst monthsArr = Array.from({\n  length: 12\n}, (x, i) => {\n  const month = i + 1;\n  return month <= 9 ? '0' + month : month;\n});\nconst yearsArr = Array.from({\n  length: 9\n}, (_x, i) => currentYear + i);\nexport default function CForm({\n  cardMonth,\n  cardYear,\n  onUpdateState,\n  cardNumberRef,\n  cardHolderRef,\n  cardDateRef,\n  onCardInputFocus,\n  onCardInputBlur,\n  cardCvv,\n  children\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        cardNumber = _useState2[0],\n        setCardNumber = _useState2[1];\n\n  const handleFormChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    onUpdateState(name, value);\n  }; // TODO: We can improve the regex check with a better approach like in the card component.\n\n\n  const onCardNumberChange = event => {\n    let _event$target2 = event.target,\n        value = _event$target2.value,\n        name = _event$target2.name;\n    let cardNumber = value;\n    value = value.replace(/\\D/g, '');\n\n    if (/^3[47]\\d{0,13}$/.test(value)) {\n      cardNumber = value.replace(/(\\d{4})/, '$1 ').replace(/(\\d{4}) (\\d{6})/, '$1 $2 ');\n    } else if (/^3(?:0[0-5]|[68]\\d)\\d{0,11}$/.test(value)) {\n      // diner's club, 14 digits\n      cardNumber = value.replace(/(\\d{4})/, '$1 ').replace(/(\\d{4}) (\\d{6})/, '$1 $2 ');\n    } else if (/^\\d{0,16}$/.test(value)) {\n      // regular cc number, 16 digits\n      cardNumber = value.replace(/(\\d{4})/, '$1 ').replace(/(\\d{4}) (\\d{4})/, '$1 $2 ').replace(/(\\d{4}) (\\d{4}) (\\d{4})/, '$1 $2 $3 ');\n    }\n\n    setCardNumber(cardNumber.trimRight());\n    onUpdateState(name, cardNumber);\n  };\n\n  const onCvvFocus = event => {\n    onUpdateState('isCardFlipped', true);\n  };\n\n  const onCvvBlur = event => {\n    onUpdateState('isCardFlipped', false);\n  }; // NOTE: Currently the cursor on the card number field gets reset if we remove a number, the code bellow was used\n  // in class components, need to transform this to work with functional components.\n  // getSnapshotBeforeUpdate() {\n  //     return this.props.cardNumberRef.current.selectionStart;\n  // }\n  // const componentDidUpdate = function (prevProps, prevState, cursorIdx) {\n  //     const node = cardNumberRef.current;\n  //     const { cardNumber: cardNum } = state;\n  //     const { cardNumber: prevCardNum } = prevState;\n  //     if (\n  //         cardNum.length > prevCardNum.length &&\n  //         cardNum[cursorIdx - 1] === ' '\n  //     ) {\n  //         cursorIdx += 1;\n  //     } else if (prevCardNum[cursorIdx - 1] === ' ') {\n  //         cursorIdx -= 1;\n  //     }\n  //     node.selectionStart = node.selectionEnd = cursorIdx;\n  // };\n\n\n  return React.createElement(\"div\", {\n    className: \"card-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, children), React.createElement(\"div\", {\n    className: \"card-form__inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"cardNumber\",\n    className: \"card-input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Card Number\"), React.createElement(\"input\", {\n    type: \"tel\",\n    name: \"cardNumber\",\n    className: \"card-input__input\",\n    autoComplete: \"off\",\n    onChange: onCardNumberChange,\n    maxLength: \"19\",\n    ref: cardNumberRef,\n    onFocus: e => onCardInputFocus(e, 'cardNumber'),\n    onBlur: onCardInputBlur,\n    value: cardNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"cardName\",\n    className: \"card-input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Card Holder\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"card-input__input\",\n    autoComplete: \"off\",\n    name: \"cardHolder\",\n    onChange: handleFormChange,\n    ref: cardHolderRef,\n    onFocus: e => onCardInputFocus(e, 'cardHolder'),\n    onBlur: onCardInputBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-form__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-form__col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-form__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"cardMonth\",\n    className: \"card-input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Expiration Date\"), React.createElement(\"select\", {\n    className: \"card-input__input -select\",\n    value: cardMonth,\n    name: \"cardMonth\",\n    onChange: handleFormChange,\n    ref: cardDateRef,\n    onFocus: e => onCardInputFocus(e, 'cardDate'),\n    onBlur: onCardInputBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Month\"), monthsArr.map((val, index) => React.createElement(\"option\", {\n    key: index,\n    value: val,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, val))), React.createElement(\"select\", {\n    name: \"cardYear\",\n    className: \"card-input__input -select\",\n    value: cardYear,\n    onChange: handleFormChange,\n    onFocus: e => onCardInputFocus(e, 'cardDate'),\n    onBlur: onCardInputBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Year\"), yearsArr.map((val, index) => React.createElement(\"option\", {\n    key: index,\n    value: val,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, val))))), React.createElement(\"div\", {\n    className: \"card-form__col -cvv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"cardCvv\",\n    className: \"card-input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"CVV\"), React.createElement(\"input\", {\n    type: \"tel\",\n    className: \"card-input__input\",\n    maxLength: \"4\",\n    autoComplete: \"off\",\n    name: \"cardCvv\",\n    onChange: handleFormChange,\n    onFocus: onCvvFocus,\n    onBlur: onCvvBlur,\n    ref: cardCvv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Success\"), ' ')))));\n}","map":{"version":3,"sources":["D:/Kalpas_Doodle/react-interactive-paycard-master/src/screens/MainScreen/components/form/index.js"],"names":["Button","React","useEffect","useState","useRef","currentYear","Date","getFullYear","monthsArr","Array","from","length","x","i","month","yearsArr","_x","CForm","cardMonth","cardYear","onUpdateState","cardNumberRef","cardHolderRef","cardDateRef","onCardInputFocus","onCardInputBlur","cardCvv","children","cardNumber","setCardNumber","handleFormChange","event","target","name","value","onCardNumberChange","replace","test","trimRight","onCvvFocus","onCvvBlur","e","map","val","index"],"mappings":"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","sourcesContent":["import Button from './Button'\nimport React, { useEffect, useState, useRef } from 'react';\n\nconst currentYear = new Date().getFullYear();\nconst monthsArr = Array.from({ length: 12 }, (x, i) => {\n    const month = i + 1;\n    return month <= 9 ? '0' + month : month;\n});\nconst yearsArr = Array.from({ length: 9 }, (_x, i) => currentYear + i);\n\nexport default function CForm({\n    cardMonth,\n    cardYear,\n    onUpdateState,\n    cardNumberRef,\n    cardHolderRef,\n    cardDateRef,\n    onCardInputFocus,\n    onCardInputBlur,\n    cardCvv,\n    children\n}) {\n    const [cardNumber, setCardNumber] = useState('');\n\n    const handleFormChange = (event) => {\n        const { name, value } = event.target;\n\n        onUpdateState(name, value);\n    };\n\n    // TODO: We can improve the regex check with a better approach like in the card component.\n    const onCardNumberChange = (event) => {\n        let { value, name } = event.target;\n        let cardNumber = value;\n        value = value.replace(/\\D/g, '');\n        if (/^3[47]\\d{0,13}$/.test(value)) {\n            cardNumber = value\n                .replace(/(\\d{4})/, '$1 ')\n                .replace(/(\\d{4}) (\\d{6})/, '$1 $2 ');\n        } else if (/^3(?:0[0-5]|[68]\\d)\\d{0,11}$/.test(value)) {\n            // diner's club, 14 digits\n            cardNumber = value\n                .replace(/(\\d{4})/, '$1 ')\n                .replace(/(\\d{4}) (\\d{6})/, '$1 $2 ');\n        } else if (/^\\d{0,16}$/.test(value)) {\n            // regular cc number, 16 digits\n            cardNumber = value\n                .replace(/(\\d{4})/, '$1 ')\n                .replace(/(\\d{4}) (\\d{4})/, '$1 $2 ')\n                .replace(/(\\d{4}) (\\d{4}) (\\d{4})/, '$1 $2 $3 ');\n        }\n\n        setCardNumber(cardNumber.trimRight());\n        onUpdateState(name, cardNumber);\n    };\n\n    const onCvvFocus = (event) => {\n        onUpdateState('isCardFlipped', true);\n    };\n\n    const onCvvBlur = (event) => {\n        onUpdateState('isCardFlipped', false);\n    };\n\n    // NOTE: Currently the cursor on the card number field gets reset if we remove a number, the code bellow was used\n    // in class components, need to transform this to work with functional components.\n    // getSnapshotBeforeUpdate() {\n    //     return this.props.cardNumberRef.current.selectionStart;\n    // }\n\n    // const componentDidUpdate = function (prevProps, prevState, cursorIdx) {\n    //     const node = cardNumberRef.current;\n    //     const { cardNumber: cardNum } = state;\n    //     const { cardNumber: prevCardNum } = prevState;\n    //     if (\n    //         cardNum.length > prevCardNum.length &&\n    //         cardNum[cursorIdx - 1] === ' '\n    //     ) {\n    //         cursorIdx += 1;\n    //     } else if (prevCardNum[cursorIdx - 1] === ' ') {\n    //         cursorIdx -= 1;\n    //     }\n    //     node.selectionStart = node.selectionEnd = cursorIdx;\n    // };\n\n    return (\n        <div className=\"card-form\">\n            <div className=\"card-list\">{children}</div>\n            <div className=\"card-form__inner\">\n                <div className=\"card-input\">\n                    <label htmlFor=\"cardNumber\" className=\"card-input__label\">\n                        Card Number\n                    </label>\n                    <input\n                        type=\"tel\"\n                        name=\"cardNumber\"\n                        className=\"card-input__input\"\n                        autoComplete=\"off\"\n                        onChange={onCardNumberChange}\n                        maxLength=\"19\"\n                        ref={cardNumberRef}\n                        onFocus={(e) => onCardInputFocus(e, 'cardNumber')}\n                        onBlur={onCardInputBlur}\n                        value={cardNumber}\n                    />\n                </div>\n\n                <div className=\"card-input\">\n                    <label htmlFor=\"cardName\" className=\"card-input__label\">\n                        Card Holder\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"card-input__input\"\n                        autoComplete=\"off\"\n                        name=\"cardHolder\"\n                        onChange={handleFormChange}\n                        ref={cardHolderRef}\n                        onFocus={(e) => onCardInputFocus(e, 'cardHolder')}\n                        onBlur={onCardInputBlur}\n                    />\n                </div>\n\n                <div className=\"card-form__row\">\n                    <div className=\"card-form__col\">\n                        <div className=\"card-form__group\">\n                            <label\n                                htmlFor=\"cardMonth\"\n                                className=\"card-input__label\"\n                            >\n                                Expiration Date\n                            </label>\n                            <select\n                                className=\"card-input__input -select\"\n                                value={cardMonth}\n                                name=\"cardMonth\"\n                                onChange={handleFormChange}\n                                ref={cardDateRef}\n                                onFocus={(e) => onCardInputFocus(e, 'cardDate')}\n                                onBlur={onCardInputBlur}\n                            >\n                                <option value=\"\" disabled>\n                                    Month\n                                </option>\n\n                                {monthsArr.map((val, index) => (\n                                    <option key={index} value={val}>\n                                        {val}\n                                    </option>\n                                ))}\n                            </select>\n                            <select\n                                name=\"cardYear\"\n                                className=\"card-input__input -select\"\n                                value={cardYear}\n                                onChange={handleFormChange}\n                                onFocus={(e) => onCardInputFocus(e, 'cardDate')}\n                                onBlur={onCardInputBlur}\n                            >\n                                <option value=\"\" disabled>\n                                    Year\n                                </option>\n\n                                {yearsArr.map((val, index) => (\n                                    <option key={index} value={val}>\n                                        {val}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"card-form__col -cvv\">\n                        <div className=\"card-input\">\n                            <label\n                                htmlFor=\"cardCvv\"\n                                className=\"card-input__label\"\n                            >\n                                CVV\n                            </label>\n                            <input\n                                type=\"tel\"\n                                className=\"card-input__input\"\n                                maxLength=\"4\"\n                                autoComplete=\"off\"\n                                name=\"cardCvv\"\n                                onChange={handleFormChange}\n                                onFocus={onCvvFocus}\n                                onBlur={onCvvBlur}\n                                ref={cardCvv}\n                            />\n                             <Button variant=\"success\">Success</Button>{' '}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}